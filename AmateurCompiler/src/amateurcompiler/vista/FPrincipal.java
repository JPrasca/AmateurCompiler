/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package amateurcompiler.vista;

import amateurcompiler.logica.*;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.Reader;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import javax.swing.text.BadLocationException;

/**
 *
 * @author jdpra
 */
public class FPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form FPrincipal
     */
    public FPrincipal() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        initComponents();
        jTextAreaCodigoIn.addCaretListener(new CaretListener() {
            @Override
            public void caretUpdate(CaretEvent e) {
                int pos = e.getDot();
                try {
                    int row = jTextAreaCodigoIn.getLineOfOffset(pos) + 1;
                    int col = pos - jTextAreaCodigoIn.getLineStartOffset(row - 1) + 1;
                    jLabelLineas.setText("Línea: " + row + " Columna: " + col);
                } catch (BadLocationException exc) {
                    System.out.println(exc);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelCondigoIn = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaCodigoIn = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaLog = new javax.swing.JTextArea();
        jLabelLineas = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuOpcion = new javax.swing.JMenu();
        jMenuEjecucion = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1366, 768));
        setMinimumSize(new java.awt.Dimension(960, 600));
        setSize(new java.awt.Dimension(900, 600));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(900, 600));

        jPanelCondigoIn.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCondigoIn.setBorder(javax.swing.BorderFactory.createTitledBorder("Escriba su código aquí"));
        jPanelCondigoIn.setPreferredSize(new java.awt.Dimension(420, 490));

        jTextAreaCodigoIn.setBackground(new java.awt.Color(238, 238, 243));
        jTextAreaCodigoIn.setColumns(20);
        jTextAreaCodigoIn.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jTextAreaCodigoIn.setForeground(new java.awt.Color(0, 65, 244));
        jTextAreaCodigoIn.setRows(5);
        jScrollPane4.setViewportView(jTextAreaCodigoIn);

        javax.swing.GroupLayout jPanelCondigoInLayout = new javax.swing.GroupLayout(jPanelCondigoIn);
        jPanelCondigoIn.setLayout(jPanelCondigoInLayout);
        jPanelCondigoInLayout.setHorizontalGroup(
            jPanelCondigoInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
        );
        jPanelCondigoInLayout.setVerticalGroup(
            jPanelCondigoInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Salida"));

        jTextAreaLog.setColumns(20);
        jTextAreaLog.setFont(new java.awt.Font("Segoe UI Light", 0, 10)); // NOI18N
        jTextAreaLog.setRows(5);
        jTextAreaLog.setEnabled(false);
        jScrollPane1.setViewportView(jTextAreaLog);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
        );

        jLabelLineas.setText("...");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabelLineas, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(650, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelCondigoIn, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jPanelCondigoIn, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelLineas)
                .addGap(24, 24, 24)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenuBar1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jMenuOpcion.setText("Archivo");
        jMenuOpcion.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jMenuBar1.add(jMenuOpcion);

        jMenuEjecucion.setText("Compilar");
        jMenuEjecucion.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jMenuEjecucion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuEjecucionMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuEjecucion);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuEjecucionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuEjecucionMouseClicked
        Reader reader = null;
        jTextAreaLog.setText("");
        try {
            pasoDeTexto();
            reader = new BufferedReader(new FileReader(amateurcompiler.CCliente.path));
            CScaneador lexer = new CScaneador(reader);
            CToken t = lexer.nextToken();
            
            while (t != null) {

                //jTextAreaLog.setText(jTextAreaLog.getText() + t.toString());
                jTextAreaLog.setText(jTextAreaLog.getText() + t.toString());
                t = lexer.nextToken();
                
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                reader.close();
            } catch (IOException ex) {
                Logger.getLogger(FPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jMenuEjecucionMouseClicked
    
    private void pasoDeTexto() {
        
        FileWriter fichero = null;
        PrintWriter pw = null;
        try {
            
            String path = FPrincipal.class.getProtectionDomain().getCodeSource().getLocation().toURI().getPath();
            path = path.substring(0, path.lastIndexOf('/') + 1);

            // Apertura del fichero y creacion de BufferedReader para poder
            // hacer una lectura comoda (disponer del metodo readLine())
            path = path + "amateurcompiler/temp/out.txt";
            amateurcompiler.CCliente.path = path;
//            JOptionPane.showMessageDialog(null, path);
            try (
                    //fichero = new FileWriter(ruta);
                    //pw = new PrintWriter(fichero);
                    BufferedWriter bw = new BufferedWriter(
                            new OutputStreamWriter(new FileOutputStream(new File(path)), "utf-8")
                    )) {
                bw.write(jTextAreaCodigoIn.getText());
            }
            
        } catch (URISyntaxException | IOException e) {
        } finally {
            try {
                // Nuevamente aprovechamos el finally para 
                // asegurarnos que se cierra el fichero.
                if (null != fichero) {
                    fichero.close();
                }
            } catch (Exception e2) {
            }
        }
        
        File archivo = null;
        FileReader fr = null;
        BufferedReader br = null;
        ArrayList<String> lineas = new ArrayList<>();

        // TODO add your handling code here:
        //Create a file chooser
        try {
            
            String path = FPrincipal.class.getProtectionDomain().getCodeSource().getLocation().toURI().getPath();
            path = path.substring(0, path.lastIndexOf('/') + 1);
            archivo = new File(path + "/amateurcompiler/temp/out.txt");
            
            fr = new FileReader(archivo);
            //br = new BufferedReader(fr);

            br = new BufferedReader(
                    new InputStreamReader(
                            new FileInputStream(archivo), "utf-8"));

            // Lectura del fichero
            String linea;
            
            while ((linea = br.readLine()) != null) {
                
                System.out.println(linea);
                lineas.add(linea + "\n");
                //System.out.println(linea);
            }
        } catch (HeadlessException | IOException e) {
            
        } catch (URISyntaxException ex) {
            Logger.getLogger(FPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            // En el finally cerramos el fichero, para asegurarnos
            // que se cierra tanto si todo va bien como si salta 
            // una excepcion.

            try {
                
                if (null != fr) {
                    
                    fr.close();
                    
                }
            } catch (Exception e2) {
            }
        }
        
        for (int i = 0; i < lineas.size(); i++) {
            //jTextAreaLog.setText(jTextAreaLog.getText() + lineas.get(i));
        }
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelLineas;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuEjecucion;
    private javax.swing.JMenu jMenuOpcion;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelCondigoIn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextAreaCodigoIn;
    private javax.swing.JTextArea jTextAreaLog;
    // End of variables declaration//GEN-END:variables
}
